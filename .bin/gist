#!/usr/bin/env node

/**
 * Quickly upload anonymous files to GitHub Gists
 *
 * USAGE
 *   $ gist <file>
 *
 * OPTIONS
 *   --debug: Prints status code, headers and HTTP response data
 *
 * @author Kutsan Kaplan <me@kutsankaplan.com>
 * @license MIT
 * @version v0.1.0
 */

const https = require('https')
const fs = require('fs')

if (!(process.argv.length >= 3))
{
	console.log('Quickly upload files to GitHub Gists')
	console.log('\nUSAGE\n  $ gist <file>')
	process.exit(0)
}

let debug = process.argv.includes('--debug')

let fileContent = ''
const fileName = process.argv[2] // TODO: Grab correct parameter not just argv[2]
const filePath = `${process.cwd()}/${fileName}`

try {
	fileContent = fs.readFileSync(filePath, 'utf8').trim()
} catch (e) {
	if (debug) console.log(e)
	console.error(`'${fileName}' no such file`)
	process.exit(1)
}

let postData = JSON.stringify({
	"public": true,
	"files": {
		[fileName]: {
			"content": fileContent
		}
	}
})

let options = {
	hostname: 'api.github.com',
	method: 'POST',
	port: 443,
	path: '/gists',
	headers: {
		'User-Agent': 'gist',
		'Content-Type': 'application/json',
		'Content-Length': Buffer.byteLength(postData)
	}
}

let req = https.request(options, (res) =>
	{
		if (debug) console.log(`STATUS: ${res.statusCode}`)
		if (debug) console.log(`HEADERS: ${JSON.stringify(res.headers, null, 4)}`)

		res.setEncoding('utf8')

		let data = ''

		res.on('data', (chunk) => data = data + chunk)
		res.on('end', () =>
		{
			let parsedData = JSON.parse(data)

			if (debug) console.log('DATA:', JSON.stringify(parsedData, null, 2))

			console.log(`\n\x1b[32m  html_url\x1b[0m ${parsedData.html_url}`)
			console.log(`\x1b[32m  raw_url\x1b[0m ${parsedData.files[fileName].raw_url}\n`)
		})
	})

req.on('error', (err) => console.log(err))

req.write(postData)
req.end()
